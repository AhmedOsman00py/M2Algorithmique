"0","cppFunction('"
"0",""
"0",""
"0","List bellmanFord(Rcpp::NumericMatrix adjacencyMatrix, int source) {"
"0",""
"0","  int n = adjacencyMatrix.nrow();"
"0"," "
"0","  Rcpp::NumericVector distance(n);"
"0","  Rcpp::IntegerVector predecessor(n);"
"0",""
"0","  for (int i = 0; i < n; i++) {"
"0","    distance[i] = R_PosInf; "
"0","    predecessor[i] = -1; "
"0","  }"
"0",""
"0","  distance[source] = 0; "
"0",""
"0"," "
"0","  for (int i = 1; i <= n-1; i++) {"
"0","    for (int u = 0; u < n; u++) { "
"0","      for (int v = 0; v < n; v++) { "
"0","      "
"0","        if (adjacencyMatrix(u,v) > 0) { "
"0",""
"0","          double alt = distance[u] + adjacencyMatrix(u,v); "
"0",""
"0","          if (alt < distance[v]) { "
"0","            distance[v] = alt;   "
"0","            predecessor[v] = u;  "
"0","          }                      "
"0",""
"0","        }                        "
"0",""
"0","      }                        "
"0",""
"0","    }                        "
"0",""
"0","  }                        "
"0",""
"0","  return Rcpp::List::create(_[""distance""]=distance, _[""predecessor""]=predecessor);  "
"0","}"
"0",""
"0","')"
