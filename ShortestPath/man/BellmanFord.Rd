% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BellmanFord.R
\name{BellmanFord}
\alias{BellmanFord}
\title{BellmanFord's algorithm (naive solution)}
\usage{
BellmanFord(vertices, edges, start)
}
\arguments{
\item{vertices}{name of the nodes (vector (int or str))}

\item{edges}{Data.frame object containing weighted edges with three variables (from, to and weight)
from   : outgoing edge
to     : incoming edge
weight : the weight of the edge}

\item{start}{starting node (int or str (depends on the vertice variable type)).}
}
\value{
list of two elements.
distance : the minimum distance from the start node to the other nodes (vector)
parents  : the predecessor of each node (vector)
}
\description{
Finds the minimal distance from the starting node to the other nodes.

The algorithm works by iterating over all the edges of the graph several times. During each iteration, the distances of the vertices are updated using the distances of the neighbouring vertices. More precisely, for each edge (u, v) of the graph, the distance of "v" is updated if it is shorter than the distance of "u" plus the weight of the edge (u, v).
}
\examples{
vertices <- c("r", "a", "b", "c")

edges <- data.frame(from   = c("r", "a", "b", "c", "c"),
                    to     = c("a", "b", "c", "r", "a"),
                    weight = c(3, 1, 2, 7, -4))

start <- "r"

BellmanFord(vertices, edges, start)

}
